---
export interface Props {
  title: string;
  body: string;
  href: string;
  src: string;
}

const { href, title, body, src } = Astro.props;
---

<li class="link-card image-border hover:-translate-y-1 duration-700">
  <a href={href} class="stack">
    <h2 class="">
      {title}
      <span>&rarr;</span>
    </h2>
    <div class="hover:shadow-xl hover:-translate-y-1 duration-300">
      <img src={src} alt={title} class="rounded-xl" />
    </div>
    <p>
      {body}
    </p>
  </a>
</li>
<style>
  .image-border {
    border: 40px solid;
    border-image-source: url('rectangle.svg');
    border-image-slice: 20;
  }
  .link-card {
    list-style: none;
    display: flex;
    padding: 0.15rem;
    background-color: var(--gray-to-black);

    /* background-image: var(--gray-to-black); */
    /* background-size: 400%; */
    border-radius: 0.5rem;
    /* background-position: 100%; */
    /* transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1); */
  }

  .link-card > a {
    width: 100%;
    text-decoration: none;
    line-height: 1.4;
    /* padding; */
    border-radius: 0.35rem;
    color: black;
    background-color: var(--gray-to-black);
    opacity: 0.8;
  }

  .link-card > img:hover {
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
      0 2px 4px -2px rgba(0, 0, 0, 0.1);
  }

  h2 {
    margin: 0;
    font-size: var(--size-step-1);
    transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
  }
  p {
    margin-top: 0.5rem;
    margin-bottom: 0;
    color: rgb(39, 39, 39);
  }
  .link-card:is(:hover, :focus-within) {
    background-position: 0;
  }
  .link-card:is(:hover, :focus-within) h2 {
    color: var(--gray-to-black);
  }
</style>
